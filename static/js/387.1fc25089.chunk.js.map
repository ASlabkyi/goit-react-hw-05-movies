{"version":3,"file":"static/js/387.1fc25089.chunk.js","mappings":"iQAEaA,E,OAAiBC,EAAAA,IAAH,8Y,SCqC3B,EAhCgB,WACd,OAAyCC,EAAAA,EAAAA,UAAS,IAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEQC,EAAAA,EAAAA,IAAeJ,GAFvB,OAEXK,EAFW,OAGjBN,EAAiBM,EAAWC,SAHX,gDAKjBC,MAAM,KAAMC,SALK,yDAAH,qDAQlBL,GACD,GAAE,CAACH,KAGF,SAACL,EAAD,WACE,wBACGG,EAAaW,OAAS,EACnBX,EAAaY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACf,2BACE,oCAAYF,MACZ,uBAAIC,MAFGC,EADM,IADpB,+CAWR,C,+LCnCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAU,sBADR,uBACjBG,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXC,EAAY,mCAAG,WAAMlB,GAAN,yFACHc,EAAAA,EAAAA,IAAA,iBAAoBd,GAAW,CACpDmB,OAAQ,CACNC,SAAU,WAHY,uBAClBH,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZI,EAAW,mCAAG,WAAMrB,GAAN,yFACFc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,YAAuC,CAC5DmB,OAAQ,CACNC,SAAU,WAHW,uBACjBH,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,sDASXb,EAAc,mCAAG,WAAMJ,GAAN,yFACLc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,YAAuC,CAC5DmB,OAAQ,CACNC,SAAU,WAHc,uBACpBH,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdK,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAAAA,EAAAA,IAAA,gBAA2B,CAChDK,OAAQ,CACNK,MAAM,GAAD,OAAKD,GACVH,SAAU,QACVK,KAAM,EACNC,eAAe,KANS,uBACpBT,EADoB,EACpBA,KADoB,kBASrBA,GATqB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/moviesServices.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsWrapper = styled.div`\n  padding: 20px;\n\n  ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n  }\n\n  li {\n    padding: 15px;\n    margin-bottom: 20px;\n    border-bottom: 1px solid #ccc;\n    padding-bottom: 10px;\n    border: 2px solid gold;\n    border-radius: 5px;\n  }\n\n  p:first-of-type {\n    font-weight: bold;\n  }\n\n  p:last-of-type {\n    margin-top: 10px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviewsById } from 'services/moviesServices';\n\nimport { ReviewsWrapper } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMoviesReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const getReviews = await getReviewsById(movieId);\n        setMoviesReviews(getReviews.results);\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <ReviewsWrapper>\n      <ul>\n        {movieReviews.length > 0\n          ? movieReviews.map(({ author, content, id }) => (\n              <li key={id}>\n                <p>Author: {author}</p>\n                <p>{content}</p>\n              </li>\n            ))\n          : `We don't have any reviews for this movie.`}\n      </ul>\n    </ReviewsWrapper>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a72c830feb3ccf91ef26a749a59c55f6',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/trending/all/day?');\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getReviewsById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getMovieByName = async movieName => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query: `${movieName}`,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return data;\n};\n"],"names":["ReviewsWrapper","styled","useState","movieReviews","setMoviesReviews","movieId","useParams","useEffect","fetchReviews","getReviewsById","getReviews","results","alert","message","length","map","author","content","id","axios","api_key","getTrending","data","getMovieById","params","language","getCastById","getMovieByName","movieName","query","page","include_adult"],"sourceRoot":""}