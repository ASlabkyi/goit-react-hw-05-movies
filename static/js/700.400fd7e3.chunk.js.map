{"version":3,"file":"static/js/700.400fd7e3.chunk.js","mappings":"wSAEaA,EAAYC,EAAAA,EAAAA,IAAH,8HAQTC,EAASD,EAAAA,EAAAA,IAAH,qFAMNE,EAAQF,EAAAA,EAAAA,GAAH,sEAKLG,EAAYH,EAAAA,EAAAA,EAAH,sEAKTI,EAAWJ,EAAAA,EAAAA,GAAH,wEAKRK,EAASL,EAAAA,EAAAA,GAAH,wEAKNM,EAAYN,EAAAA,EAAAA,GAAH,0EAMTO,EAAYP,EAAAA,EAAAA,GAAH,kDAITQ,EAAiBR,EAAAA,EAAAA,EAAH,wEAKdS,EAAqBT,EAAAA,EAAAA,GAAH,0EAMlBU,EAAqBV,EAAAA,EAAAA,GAAH,yE,SCrCzBW,GAAWX,EAAAA,EAAAA,GAAOY,EAAAA,GAAPZ,CAAH,kJAoFd,EA1EqB,WAAO,IAAD,IACzB,GAAkCa,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE5CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEOC,EAAAA,EAAAA,IAAaT,GAFpB,OAETU,EAFS,OAGfX,EAAaW,GAHE,gDAKfC,MAAM,KAAMC,SALG,yDAAH,qDAQhBJ,GACD,GAAE,CAACR,IAEJ,IACea,EAMXf,EANFgB,YACcC,EAKZjB,EALFkB,aACAC,EAIEnB,EAJFmB,MACAC,EAGEpB,EAHFoB,KACAC,EAEErB,EAFFqB,SACAC,EACEtB,EADFsB,OAEF,OACE,UAACrC,EAAD,YACE,SAACY,EAAD,CAAU0B,GAAIjB,EAAaC,MAAO,CAAEC,KAAMJ,GAA1C,qBAGCW,IACC,SAAC5B,EAAD,CACEqC,IAAG,0CAAqCT,GACxCU,IAAG,OAAEN,QAAF,IAAEA,EAAAA,EAASC,KAIlB,SAAChC,EAAD,iBAAQ+B,QAAR,IAAQA,EAAAA,EAASC,KACjB,UAAC/B,EAAD,0BACeqC,KAAKC,MAAoB,GAAdV,GAAkBW,QAAQ,GAAK,QAEzD,SAACtC,EAAD,wBACA,uBAAI+B,KACJ,SAAC9B,EAAD,sBACO,OAAN+B,QAAM,IAANA,OAAA,EAAAA,EAAQO,QAAS,IAChB,SAACrC,EAAD,UACG8B,EAAOQ,KAAI,WAAWC,GAAX,IAAGX,EAAH,EAAGA,KAAH,OACV,SAAC3B,EAAD,UAAwB2B,GAARW,EADN,OAKhB,SAACrC,EAAD,sCACA,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAU0B,GAAI,OAAQhB,MAAO,CAAEC,KAAMF,GAArC,qBAIF,SAACV,EAAD,WACE,SAACC,EAAD,CAAU0B,GAAI,UAAWhB,MAAO,CAAEC,KAAMF,GAAxC,2BAMJ,SAAC,EAAA0B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,+LCpGDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAU,sBADR,uBACjBG,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKX1B,EAAY,mCAAG,WAAMT,GAAN,yFACHgC,EAAAA,EAAAA,IAAA,iBAAoBhC,GAAW,CACpDoC,OAAQ,CACNC,SAAU,WAHY,uBAClBF,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZG,EAAW,mCAAG,WAAMtC,GAAN,yFACFgC,EAAAA,EAAAA,IAAA,iBAAoBhC,EAApB,YAAuC,CAC5DoC,OAAQ,CACNC,SAAU,WAHW,uBACjBF,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,sDASXI,EAAc,mCAAG,WAAMvC,GAAN,yFACLgC,EAAAA,EAAAA,IAAA,iBAAoBhC,EAApB,YAAuC,CAC5DoC,OAAQ,CACNC,SAAU,WAHc,uBACpBF,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdK,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAAAA,EAAAA,IAAA,gBAA2B,CAChDI,OAAQ,CACNM,MAAM,GAAD,OAAKD,GACVJ,SAAU,QACVM,KAAM,EACNC,eAAe,KANS,uBACpBT,EADoB,EACpBA,KADoB,kBASrBA,GATqB,2CAAH,qD","sources":["Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx","services/moviesServices.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 2rem;\n  color: #333;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  max-width: 500px;\n  margin-bottom: 1rem;\n`;\n\nexport const Title = styled.h1`\n  font-size: 2rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const UserScore = styled.p`\n  font-size: 1.2rem;\n  margin-bottom: 1rem;\n`;\n\nexport const Overview = styled.h3`\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const Genres = styled.h3`\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const GenreList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const GenreItem = styled.li`\n  margin-bottom: 0.5rem;\n`;\n\nexport const AdditionalInfo = styled.p`\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const AdditionalInfoItem = styled.li`\n  text-align: center;\n  margin-bottom: 0.5rem;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nimport { getMovieById } from 'services/moviesServices';\n\nimport {\n  Container,\n  Poster,\n  Title,\n  UserScore,\n  Overview,\n  Genres,\n  GenreList,\n  GenreItem,\n  AdditionalInfo,\n  AdditionalInfoList,\n  AdditionalInfoItem,\n} from './MovieDetails.styled';\n\nconst BackLink = styled(Link)`\n  margin-bottom: 1rem;\n  color: #0077ff;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const detailsLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const getData = await getMovieById(movieId);\n        setMovieData(getData);\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const {\n    poster_path: posterPath,\n    vote_average: voteAverage,\n    title,\n    name,\n    overview,\n    genres,\n  } = movieData;\n  return (\n    <Container>\n      <BackLink to={detailsLink} state={{ from: location }}>\n        Go back\n      </BackLink>\n      {posterPath && (\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500/${posterPath}`}\n          alt={title ?? name}\n        />\n      )}\n\n      <Title>{title ?? name}</Title>\n      <UserScore>\n        User score: {Math.round(voteAverage * 10).toFixed(0) + '%'}\n      </UserScore>\n      <Overview>Overview</Overview>\n      <p>{overview}</p>\n      <Genres>Genres</Genres>\n      {genres?.length > 0 && (\n        <GenreList>\n          {genres.map(({ name }, index) => (\n            <GenreItem key={index}>{name}</GenreItem>\n          ))}\n        </GenreList>\n      )}\n      <AdditionalInfo>Additional information</AdditionalInfo>\n      <AdditionalInfoList>\n        <AdditionalInfoItem>\n          <BackLink to={'cast'} state={{ from: detailsLink }}>\n            Cast\n          </BackLink>\n        </AdditionalInfoItem>\n        <AdditionalInfoItem>\n          <BackLink to={'reviews'} state={{ from: detailsLink }}>\n            Reviews\n          </BackLink>\n        </AdditionalInfoItem>\n      </AdditionalInfoList>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a72c830feb3ccf91ef26a749a59c55f6',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/trending/all/day?');\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getReviewsById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getMovieByName = async movieName => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query: `${movieName}`,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return data;\n};\n"],"names":["Container","styled","Poster","Title","UserScore","Overview","Genres","GenreList","GenreItem","AdditionalInfo","AdditionalInfoList","AdditionalInfoItem","BackLink","Link","useState","movieData","setMovieData","movieId","useParams","location","useLocation","detailsLink","state","from","useEffect","fetchMovie","getMovieById","getData","alert","message","posterPath","poster_path","voteAverage","vote_average","title","name","overview","genres","to","src","alt","Math","round","toFixed","length","map","index","Suspense","fallback","axios","api_key","getTrending","data","params","language","getCastById","getReviewsById","getMovieByName","movieName","query","page","include_adult"],"sourceRoot":""}