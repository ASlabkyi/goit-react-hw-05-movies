{"version":3,"file":"static/js/736.f8329d57.chunk.js","mappings":"iQAEaA,E,OAAcC,EAAAA,GAAH,g2B,SC4CxB,EAvCa,WAAO,IAAD,EACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEQC,EAAAA,EAAAA,IAAYJ,GAFpB,OAERK,EAFQ,OAGdN,EAAaM,GAHC,gDAKdC,MAAM,KAAMC,SALE,yDAAH,qDAQfJ,GACD,GAAE,CAACH,KAGF,0BACE,SAACL,EAAD,oBACGG,EAAUU,YADb,aACG,EAAgBC,KACf,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAoBC,EAAtC,EAAwBC,aAAxB,OACE,0BACGD,IACC,gBACEE,OAAO,QACPC,IAAG,0CAAqCH,GACxCI,IAAKL,KAGT,uBAAIA,KACJ,uCAAeD,OATRD,EADX,OAiBT,C,+LC1CDQ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAU,sBADR,uBACjBG,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXC,EAAY,mCAAG,WAAMtB,GAAN,yFACHkB,EAAAA,EAAAA,IAAA,iBAAoBlB,GAAW,CACpDuB,OAAQ,CACNC,SAAU,WAHY,uBAClBH,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZjB,EAAW,mCAAG,WAAMJ,GAAN,yFACFkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,YAAuC,CAC5DuB,OAAQ,CACNC,SAAU,WAHW,uBACjBH,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,sDASXI,EAAc,mCAAG,WAAMzB,GAAN,yFACLkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,YAAuC,CAC5DuB,OAAQ,CACNC,SAAU,WAHc,uBACpBH,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdK,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAAAA,EAAAA,IAAA,gBAA2B,CAChDK,OAAQ,CACNK,MAAM,GAAD,OAAKD,GACVH,SAAU,QACVK,KAAM,EACNC,eAAe,KANS,uBACpBT,EADoB,EACpBA,KADoB,kBASrBA,GATqB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/moviesServices.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 20px;\n  gap: 20px;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 150px;\n    margin-bottom: 20px;\n    border: 2px solid gold;\n    border-radius: 5px;\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);\n    transition: all 0.2s ease-in-out;\n\n    &:hover {\n      transform: scale(1.05);\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n      cursor: pointer;\n    }\n  }\n\n  img {\n    width: 100%;\n    border-radius: 50%;\n    object-fit: cover;\n    margin-bottom: 10px;\n  }\n\n  p {\n    text-align: center;\n    margin: 0;\n    font-size: 16px;\n    font-weight: bold;\n\n    &::last-of-type {\n      font-weight: normal;\n      margin-top: 5px;\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCastById } from 'services/moviesServices';\n\nimport { CastWrapper } from './Cast.styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const getCast = await getCastById(movieId);\n        setMovieCast(getCast);\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <CastWrapper>\n        {movieCast.cast?.map(\n          ({ id, character, name, profile_path: profilePath }) => (\n            <li key={id}>\n              {profilePath && (\n                <img\n                  height=\"225px\"\n                  src={`https://image.tmdb.org/t/p/w500/${profilePath}`}\n                  alt={name}\n                />\n              )}\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          )\n        )}\n      </CastWrapper>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a72c830feb3ccf91ef26a749a59c55f6',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/trending/all/day?');\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getReviewsById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getMovieByName = async movieName => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query: `${movieName}`,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return data;\n};\n"],"names":["CastWrapper","styled","useState","movieCast","setMovieCast","movieId","useParams","useEffect","fetchCast","getCastById","getCast","alert","message","cast","map","id","character","name","profilePath","profile_path","height","src","alt","axios","api_key","getTrending","data","getMovieById","params","language","getReviewsById","getMovieByName","movieName","query","page","include_adult"],"sourceRoot":""}