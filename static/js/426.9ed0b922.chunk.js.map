{"version":3,"file":"static/js/426.9ed0b922.chunk.js","mappings":"8OAEaA,E,OAAkBC,EAAAA,IAAH,wwB,SC+C5B,EAxCe,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAyBA,OAZAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAK,UAAGV,EAAaW,IAAI,gBAApB,QAAgC,GAE3C,KACEC,EAAAA,EAAAA,IAAeF,GAAOG,MAAK,SAAAC,GAAI,OAAIR,EAAUQ,EAAKC,QAAnB,IAE/BP,GAAW,EAGZ,CAFC,MAAOQ,GACPC,MAAMD,EAAME,QACb,CACF,GAAE,CAAClB,EAAcO,KAGhB,UAACV,EAAD,YACE,kBAAMsB,SApBgB,SAAAC,GACxBA,EAAEC,iBACFb,GAAW,GACXP,EAA8B,KAAdE,EAAmB,CAAEO,MAAOP,GAAc,CAAC,EAC5D,EAgBG,WACE,kBAAOmB,SA1BQ,SAAAF,GACnB,IAAQG,EAAUH,EAAEI,OAAZD,MACRnB,EAAamB,EACd,EAuBoCA,MAAOpB,EAAWsB,KAAK,UACtD,mBAAQA,KAAK,SAAb,uBAEDpB,EAAOqB,OAAS,IAAK,SAACC,EAAA,EAAD,CAAYC,SAAUvB,MAGjD,C,sFC7CYwB,E,OAAsB/B,EAAAA,IAAH,mW,SCwBhC,EApBmB,SAAC,GAAkB,IAAhB8B,EAAe,EAAfA,SACdE,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACF,EAAD,WACE,wBACGD,EAASI,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC5B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,gBACGI,QADH,IACGA,EAAAA,EAAQD,KAFJE,EAMZ,OAIR,C,+LCtBDI,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAU,sBADR,uBACjBG,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,GAAW,CACpDC,OAAQ,CACNC,SAAU,WAHY,uBAClBJ,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZK,EAAW,mCAAG,WAAMH,GAAN,yFACFL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,YAAuC,CAC5DC,OAAQ,CACNC,SAAU,WAHW,uBACjBJ,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,sDASXM,EAAc,mCAAG,WAAMJ,GAAN,yFACLL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,YAAuC,CAC5DC,OAAQ,CACNC,SAAU,WAHc,uBACpBJ,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASd9B,EAAc,mCAAG,WAAMT,GAAN,yFACLoC,EAAAA,EAAAA,IAAA,gBAA2B,CAChDM,OAAQ,CACNnC,MAAM,GAAD,OAAKP,GACV2C,SAAU,QACVG,KAAM,EACNC,eAAe,KANS,uBACpBR,EADoB,EACpBA,KADoB,kBASrBA,GATqB,2CAAH,qD","sources":["Pages/Movies/Movies.styled.jsx","Pages/Movies/Movies.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","services/moviesServices.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MoviesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 2rem;\n\n  form {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-bottom: 1rem;\n\n    input[type='text'] {\n      padding: 0.5rem;\n      margin-right: 0.5rem;\n      border-radius: 0.25rem;\n      border: 1px solid #ccc;\n      font-size: 1rem;\n      width: 20rem;\n\n      &:focus {\n        outline: none;\n        border-color: #333;\n      }\n    }\n\n    button[type='submit'] {\n      padding: 0.5rem 1rem;\n      border-radius: 0.25rem;\n      background-color: #4b5563;\n      color: white;\n      font-size: 1rem;\n\n      &:hover {\n        cursor: pointer;\n        background-color: #1f2937;\n      }\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nimport { getMovieByName } from 'services/moviesServices';\n\nimport { MoviesContainer } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieName, setMovieName] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [canLoad, setCanLoad] = useState(false);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setMovieName(value);\n  };\n\n  const handleMovieSubmit = e => {\n    e.preventDefault();\n    setCanLoad(true);\n    setSearchParams(movieName !== '' ? { query: movieName } : {});\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n\n    try {\n      getMovieByName(query).then(resp => setMovies(resp.results));\n\n      setCanLoad(false);\n    } catch (error) {\n      alert(error.message);\n    }\n  }, [searchParams, canLoad]);\n\n  return (\n    <MoviesContainer>\n      <form onSubmit={handleMovieSubmit}>\n        <input onChange={handleChange} value={movieName} type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies.length > 0 && <MoviesList trending={movies} />}\n    </MoviesContainer>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\n\nexport const MoviesListContainer = styled.div`\n  ul {\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    gap: 10px;\n    margin: 0;\n    padding: 0;\n\n    li {\n      a {\n        color: #333;\n        text-decoration: none;\n        transition: color 0.2s ease-in-out;\n\n        &:hover {\n          color: #ff4500;\n        }\n      }\n    }\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport { MoviesListContainer } from './MoviesList.styled';\n\nconst MoviesList = ({ trending }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesListContainer>\n      <ul>\n        {trending.map(({ title, name, id }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {name ?? title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </MoviesListContainer>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  trending: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ),\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a72c830feb3ccf91ef26a749a59c55f6',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/trending/all/day?');\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getReviewsById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const getMovieByName = async movieName => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query: `${movieName}`,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return data;\n};\n"],"names":["MoviesContainer","styled","useSearchParams","searchParams","setSearchParams","useState","movieName","setMovieName","movies","setMovies","canLoad","setCanLoad","useEffect","query","get","getMovieByName","then","resp","results","error","alert","message","onSubmit","e","preventDefault","onChange","value","target","type","length","MoviesList","trending","MoviesListContainer","location","useLocation","map","title","name","id","to","state","from","axios","api_key","getTrending","data","getMovieById","movieId","params","language","getCastById","getReviewsById","page","include_adult"],"sourceRoot":""}